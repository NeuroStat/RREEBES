g1 <- qplot(as.numeric(Day.number), value, col=variable, data=all.data) +
facet_wrap(~Type, ncol=2, scales="free_y") +
geom_point() + geom_line() +
scale_colour_manual(values = species.colour.mapping)
g1
rm(list=ls())
library(tidyr)
library(dplyr)
library(lubridate)
library(stringr)
library(ggplot2)
library(RCurl)
spp.abund <- read.csv(text=getURL("https://raw.githubusercontent.com/opetchey/RREEBES/master/Beninca_etal_2008_Nature/data/species_abundances_original.csv"), skip=7, header=T)
spp.abund <- select(spp.abund, -X, -X.1)
spp.abund <- spp.abund[-804:-920,]
str(spp.abund)
spp.abund$Protozoa <- as.numeric(str_replace(spp.abund$Protozoa, ",", "."))
spp.abund$Date[duplicated(spp.abund$Date)]
which(duplicated(spp.abund$Date))
spp.abund$Date <- dmy(spp.abund$Date)
sum(spp.abund$Day.number == 1+as.numeric((spp.abund$Date - spp.abund$Date[1]) / 24 / 60 / 60)) == length(spp.abund$Date)
which(spp.abund$Date==ymd("2096-10-28 UTC"))
spp.abund$Date[701] <- ymd("2096-10-26 UTC")
sum(spp.abund$Day.number == 1+as.numeric((spp.abund$Date - spp.abund$Date[1]) / 24 / 60 / 60)) == length(spp.abund$Date)
spp.abund <- gather(spp.abund, "variable", "value", 3:12)
str(spp.abund)
all.data <- rbind(spp.abund, nuts)
ggplot(all.data, aes(x=Day.number, y=value)) + geom_line() +
facet_wrap(~variable, scales="free_y")
all.data <- merge(all.data, tt)
all.data$Type <- factor(all.data$Type, levels=c("Cyclopoids", "Herbivore", "Phytoplankton", "Nutrient",
"Bacteria", "Detritivore"))
g1 <- qplot(as.numeric(Day.number), log10(value+0.00001), col=variable, data=all.data) +
facet_wrap(~Type, ncol=2, scales="free_y") +
geom_point() + geom_line() +
scale_colour_manual(values = species.colour.mapping)
g1
#aggregate(Day.number ~ variable, all.data, min)
#aggregate(Day.number ~ variable, all.data, max)
xout <- seq(342, 2651, by=3.35)
range(xout)
mt$fr.value <- mt$value^0.25
final <- group_by(detrended, variable) %>%
mutate(y=as.numeric(scale(dt.value)))
summarise(final, mean=mean(y), sd=sd(y))
soi <- "Bacteria"
g1 <- ggplot(filter(detrended, variable==soi), aes(x=Day.number, y=fr.value)) +
facet_wrap(~variable, ncol=2, scales="free_y") +
geom_point(size=0.5, col="black") + geom_line(size=0.1) +
scale_colour_manual(values = species.colour.mapping) + ggtitle("Quarter power trans. and trend")
g2 <- geom_line(data=filter(detrended, variable==soi), aes(x=Day.number, y=smoothed), size=0.25, col="blue")
g1 + g2
final_nozeros <- final[final$y!=0,]
all.data <- filter(all.data, Date>dmy("16/06/2091") & Date<dmy("20/10/2097"))
species.colour.mapping <- c("Cyclopoids"="pink",
"Calanoid.copepods"="red",
"Rotifers"="blue",
"Protozoa"="green",
"Nanophytoplankton"="red",
"Picophytoplankton"="black",
"Filamentous.diatoms"="green",
"Ostracods"="lightblue",
"Harpacticoids"="purple",
"Bacteria"="black",
"Total.dissolved.inorganic.nitrogen"="red",
"Soluble.reactive.phosphorus"="black")
g1 <- qplot(as.numeric(Day.number), value^0.25, col=variable, data=all.data) +
facet_wrap(~Type, ncol=2, scales="free_y") +
geom_point() + geom_line() +
scale_colour_manual(values = species.colour.mapping)
g1
detrended <- group_by(mt, variable) %>%
mutate(smoothed=ksmooth(Day.number, fr.value, kernel="normal", bandwidth=300)$y)
detrended$dt.value <- detrended$value - detrended$smoothed
g1 <- ggplot(filter(all.data, variable==soi), aes(x=Day.number, y=value)) +
facet_wrap(~variable, ncol=2, scales="free_y") +
geom_point(size=1, col="black") + geom_line(size=0.1) +
scale_colour_manual(values = species.colour.mapping) + ggtitle("Raw and interpolated data")
g2 <- geom_line(data=filter(mt, variable==soi), aes(x=Day.number, y=value), size=0.25, col="blue")
g1 + g2
spp.abund$Day.number <- 1+as.numeric((spp.abund$Date - spp.abund$Date[1]) / 24 / 60 / 60)
tt <- data.frame(variable=unique(all.data$variable),
Type=c("Cyclopoids", "Herbivore", "Herbivore", "Herbivore",
"Phytoplankton",  "Phytoplankton", "Phytoplankton",
"Detritivore", "Detritivore", "Bacteria", "Nutrient", "Nutrient"))
tt
an2 <- filter(all.data, Type=="Cyclopoids" & value<0.6 |
Type=="Herbivore" & value<13 |
Type=="Phytoplankton" & value<1400 |
Type=="Nutrient" & value<50 |
Type=="Bacteria" & value<10 |
Type=="Detritivore" & value<0.7)
g1 <- qplot(as.numeric(Day.number), value, col=variable, data=an2) +
facet_wrap(~Type, ncol=2, scales="free_y") +
geom_point() + geom_line() +
scale_colour_manual(values = species.colour.mapping)
g1
glimpse(final)
nuts <- read.csv(text=getURL("https://raw.githubusercontent.com/opetchey/RREEBES/master/Beninca_etal_2008_Nature/data/nutrients_original.csv"), skip=7, header=T)
nuts <- select(nuts, -X, -X.1)
nuts <- nuts[-349:-8163,]
nuts$Date <- dmy(nuts$Date)
nuts <- select(nuts, -NO2, -NO3, -NH4)
nuts$Date[duplicated(nuts$Date)]
which(duplicated(nuts$Date))
nuts <- gather(nuts, "variable", "value", 3:4)
str(nuts)
all.data1 <- na.omit(all.data)
mt <- plyr::dlply(all.data1,
"variable",
function(xx) pracma::interp1(x=xx$Day.number,
y=xx$value,
xi=xout,
method="cubic"))
## Aside: the duplicated date that was previously fixed was ponly discovered by a warning message
## given by the pracma::interp1 function!!!
mt <- as.data.frame(mt)
mt <- cbind(Day.number=xout, mt)
mt <- gather(mt, variable, value, 2:13)
#ggplot(mt, aes(x=Day.number, y=value)) + facet_wrap(~variable, scales="free") + geom_line()
g1 <- ggplot(filter(final, variable==soi), aes(x=Day.number, y=y)) +
facet_wrap(~variable, ncol=2, scales="free_y") +
geom_point(size=0.5, col="black") + geom_line(size=0.1) +
scale_colour_manual(values = species.colour.mapping) + ggtitle("Detrended and normalised")
g1
source('~/.active-rstudio-document', echo=TRUE)
?wide
??wide
library(reshape)
?reshape
```
str(final_nozeros)
reshape(final_nozeros, timevar = "Day.number", idvar = "variable", direction = "wide")
final_wide <- reshape(final_nozeros, timevar = "Day.number", idvar = "variable", direction = "wide")
final_wide
head(final_wide)
final_wide <- reshape(final_nozeros, timevar = "variable", idvar = "Day.number", direction = "wide")
head(final_wide)
final_wide <- reshape(final_nozeros, v.names = "variable", idvar = "Day.number", direction = "wide")
final_wide <- reshape(final_nozeros, timevar = "variable", idvar = "Day.number", direction = "wide")
final_wide
head(final_nozeros)
final_wide <- reshape(final_nozeros[,c(1,2,7)], timevar = "variable", idvar = "Day.number", direction = "wide")
head(final_nozeros)
head(final_wide)
final_nozeros <- final[final$y!=0,]
# make it wide format
library(reshape)
final_wide <- reshape(final_nozeros[,c(1,2,7)], timevar = "variable", idvar = "Day.number", direction = "wide")
head(final_nozeros[,c(1,2,7)])
final_wide <- reshape(final_nozeros[,c(1,2,7)], idvar = "variable", timevar = "Day.number", direction = "wide")
final_wide
head(final_wide)
final_wide <- spread(final_nozeros[,c(1,2,7)], variable,y)
head(final_wide)
str(final_wide)
cor.coefs <- cor(final_wide[,c(-1)])
cor.coefs
Calculate correlation coefficients:
```{r}
cor.coefs <- cor(final_wide[,c(-1)])
```
Calculate p-vals for correlation coefficients:
```{r}
cor.pvals <- cor.prob(final_wide[,c(-1)])
```
cor.coefs <- cor(final_wide[,c(-1)])
cor.pvals <- cor.prob(final_wide[,c(-1)])
cor.prob <- function(X){ # https://stat.ethz.ch/pipermail/r-help/2005-July/076050.html
# Correlations Below Main Diagonal
# Significance Tests with Pairwise Deletion
# Above Main Diagonal
# Believe part of this came from Bill Venables
pair.SampSize <- pn(X)
above1 <- row(pair.SampSize) < col(pair.SampSize)
pair.df <- pair.SampSize[above1] - 2
R <- cor(X, use="pair")
above2 <- row(R) < col(R)
r2 <- R[above2]^2
Fstat <- (r2 * pair.df)/(1 - r2)
R[above2] <- 1 - pf(Fstat, 1, pair.df)
R
}
cor.pvals <- cor.prob(final_wide[,c(-1)])
# https://stat.ethz.ch/pipermail/r-help/2005-July/076050.html
pn <- function(X){crossprod(!is.na(X))}
cor.prob <- function(X){
# Correlations Below Main Diagonal
# Significance Tests with Pairwise Deletion
# Above Main Diagonal
# Believe part of this came from Bill Venables
pair.SampSize <- pn(X)
above1 <- row(pair.SampSize) < col(pair.SampSize)
pair.df <- pair.SampSize[above1] - 2
R <- cor(X, use="pair")
above2 <- row(R) < col(R)
r2 <- R[above2]^2
Fstat <- (r2 * pair.df)/(1 - r2)
R[above2] <- 1 - pf(Fstat, 1, pair.df)
R
}
cor.pvals <- cor.prob(final_wide[,c(-1)])
cor.pvals
cor.coefs
cor.coefs
cor.coefs.char <- as.character(cor.coefs)
cor.coefs.char
cor.stars <- cor.pvals
cor.stars
cor.stars <- cor.pvals
cor.stars <- ifelse(cor.pvals>0.05, "",
ifelse(cor.pvals<0.05, "*",
ifelse(cor.pvals<0.001, "**", "***")
)
)
cor.stars
cor.stars <- cor.pvals
cor.stars <- ifelse(cor.pvals<0.0001, "***",
ifelse(cor.pvals<0.001, "**",
ifelse(cor.pvals<0.05, "*", "")))
cor.stars
x <- c(-2, -1, 0, 1, 2)
y <- c(4,   1, 0, 1, 4)
z <- c(1,   2, 3, 4, NA)
v <- c(1,   2, 3, 4, 5)
rcorr(cbind(x,y,z,v))
library(Hmisc)
x <- c(-2, -1, 0, 1, 2)
y <- c(4,   1, 0, 1, 4)
z <- c(1,   2, 3, 4, NA)
v <- c(1,   2, 3, 4, 5)
rcorr(cbind(x,y,z,v))
cor.coefs1 <- cor(final_wide[,c(-1)])
# or, better, use rcorr() from Hmisc
library(Hmisc)
cor.coefs <- rcorr(final_wide[,c(-1)])
cor.coefs
source('~/.active-rstudio-document', echo=TRUE)
library(Hmisc)
kable(cor.cp, format="html", col.names = colnames(cor.cp))
source('~/.active-rstudio-document', echo=TRUE)
kable(cor.cp, format="html", col.names = colnames(cor.cp))
kable(cor.cp, format="pdf", col.names = colnames(cor.cp))
kable(cor.cp, format="markdown", col.names = colnames(cor.cp))
source('~/.active-rstudio-document', echo=TRUE)
cor.cp[1,1]
source('~/.active-rstudio-document', echo=TRUE)
unique(final$variable)
final_nozeros <- final[final$y!=0 | final$variable!="Cyclopoids",]
unique(final_nozeros$variable)
final_nozeros <- final[final$y!=0,]
final_long <- final_nozeros[final_nozeros$variable!="Cyclopoids",c(1,2,7)]
head(final_long)
cor.coefs
source('~/.active-rstudio-document', echo=TRUE)
cor.coefs
names(cor.coefs)
str(cor.coefs)
source('~/.active-rstudio-document', echo=TRUE)
final_nozeros <- final[final$y!=0,]
# make it wide format
library(tidyr)
final_long <- final_nozeros[final_nozeros$variable!=c("Cyclopoids", "Filamentous.diatoms"),c(1,2,7)]
final_wide <- spread(final_long, variable,y)
str(final_long)
final_long <- final_nozeros[final_nozeros$variable!="Cyclopoids" & final_nozeros$variable!="Filamentous.diatoms",c(1,2,7)]
head(final_long)
final_wide <- spread(final_long, variable,y)
cor.coefs <- cor(final_wide[,c(-1)])
for(i in 1:10){
for(j in 1:10){
cor.coefs[i,j] <- ifelse(i<j, cor.coefs[i,j], NA)
}}
# https://stat.ethz.ch/pipermail/r-help/2005-July/076050.html
pn <- function(X){crossprod(!is.na(X))}
cor.prob <- function(X){
# Correlations Below Main Diagonal
# Significance Tests with Pairwise Deletion
# Above Main Diagonal
# Believe part of this came from Bill Venables
pair.SampSize <- pn(X)
above1 <- row(pair.SampSize) < col(pair.SampSize)
pair.df <- pair.SampSize[above1] - 2
R <- cor(X, use="pair")
above2 <- row(R) < col(R)
r2 <- R[above2]^2
Fstat <- (r2 * pair.df)/(1 - r2)
R[above2] <- 1 - pf(Fstat, 1, pair.df)
R
}
cor.pvals <- cor.prob(final_wide[,c(-1)])
for(i in 1:10){
for(j in 1:10){
cor.pvals[i,j] <- ifelse(i<j, cor.pvals[i,j], NA)
}}
cor.stars <- cor.pvals
cor.stars <- ifelse(cor.pvals<0.0001, "***",
ifelse(cor.pvals<0.001, "**",
ifelse(cor.pvals<0.05, "*", "")))
cor.cp <- cor.coefs
for(i in 1:10){
for(j in 1:10){
cor.cp[i,j] <- paste(round(cor.coefs[i,j],3), cor.stars[i,j])
}}
for(i in 1:10){
for(j in 1:10){
cor.cp[i,j] <- ifelse(cor.cp[i,j]=="NA NA", "", cor.cp[i,j])
}}
library(knitr)
table1 <- kable(cor.cp, format="html", col.names = colnames(cor.cp), align="c",
caption="Table 1.'Correlations between the species in the food web. Table entries show the product–moment correlation coefficients, after transformation of the data to stationary time series (see Methods). Significance tests were corrected for multiple hypothesis testing by calculation of adjusted P values using the false discovery rate.' Significant correlations are indicated as follows: ***P , 0.001; **P , 0.01; *P , 0.05. 'The correlation between calanoid copepods and protozoa could not be calculated, because their time series did not overlap. Filamentous diatoms and cyclopoid copepods were not included in the correlation analysis, because their time series contained too many zeros.' (Beninca et al. 2008)")
table1
